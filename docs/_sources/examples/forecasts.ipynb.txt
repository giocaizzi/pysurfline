{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Get forecast for a specific spot"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "from pysurfline import SpotForecast"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "-----\n",
      "ForecastGetter(Type:wave, Status:200)\n",
      "-----\n",
      "ForecastGetter(Type:wind, Status:200)\n",
      "-----\n",
      "ForecastGetter(Type:tides, Status:200)\n",
      "-----\n",
      "ForecastGetter(Type:weather, Status:200)\n"
     ]
    }
   ],
   "source": [
    "params={\n",
    "    \"spotId\":\"5842041f4e65fad6a7708890\",\n",
    "    \"days\":7,\n",
    "    \"intervalHours\":3,\n",
    "    }\n",
    "spot=SpotForecast(params,verbose=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>utcOffset</th>\n",
       "      <th>surf_min</th>\n",
       "      <th>surf_max</th>\n",
       "      <th>surf_optimalScore</th>\n",
       "      <th>swells</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>timestamp</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2022-02-13 10:00:00</th>\n",
       "      <td>-10</td>\n",
       "      <td>1.4220</td>\n",
       "      <td>1.8268</td>\n",
       "      <td>0</td>\n",
       "      <td>[{'height': 1.02912, 'period': 8, 'direction':...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-02-13 13:00:00</th>\n",
       "      <td>-10</td>\n",
       "      <td>1.3315</td>\n",
       "      <td>1.6801</td>\n",
       "      <td>0</td>\n",
       "      <td>[{'height': 1.13672, 'period': 8, 'direction':...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-02-13 16:00:00</th>\n",
       "      <td>-10</td>\n",
       "      <td>1.2010</td>\n",
       "      <td>1.4934</td>\n",
       "      <td>0</td>\n",
       "      <td>[{'height': 1.17986, 'period': 8, 'direction':...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-02-13 19:00:00</th>\n",
       "      <td>-10</td>\n",
       "      <td>0.9705</td>\n",
       "      <td>1.3267</td>\n",
       "      <td>0</td>\n",
       "      <td>[{'height': 1.0289, 'period': 6, 'direction': ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-02-13 22:00:00</th>\n",
       "      <td>-10</td>\n",
       "      <td>0.8400</td>\n",
       "      <td>1.1500</td>\n",
       "      <td>0</td>\n",
       "      <td>[{'height': 1.26823, 'period': 6, 'direction':...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                     utcOffset  surf_min  surf_max  surf_optimalScore  \\\n",
       "timestamp                                                               \n",
       "2022-02-13 10:00:00        -10    1.4220    1.8268                  0   \n",
       "2022-02-13 13:00:00        -10    1.3315    1.6801                  0   \n",
       "2022-02-13 16:00:00        -10    1.2010    1.4934                  0   \n",
       "2022-02-13 19:00:00        -10    0.9705    1.3267                  0   \n",
       "2022-02-13 22:00:00        -10    0.8400    1.1500                  0   \n",
       "\n",
       "                                                                swells  \n",
       "timestamp                                                               \n",
       "2022-02-13 10:00:00  [{'height': 1.02912, 'period': 8, 'direction':...  \n",
       "2022-02-13 13:00:00  [{'height': 1.13672, 'period': 8, 'direction':...  \n",
       "2022-02-13 16:00:00  [{'height': 1.17986, 'period': 8, 'direction':...  \n",
       "2022-02-13 19:00:00  [{'height': 1.0289, 'period': 6, 'direction': ...  \n",
       "2022-02-13 22:00:00  [{'height': 1.26823, 'period': 6, 'direction':...  "
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "waves=spot.get_dataframe(\"wave\")\n",
    "waves.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>utcOffset</th>\n",
       "      <th>speed</th>\n",
       "      <th>direction</th>\n",
       "      <th>directionType</th>\n",
       "      <th>gust</th>\n",
       "      <th>optimalScore</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>timestamp</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2022-02-13 10:00:00</th>\n",
       "      <td>-10</td>\n",
       "      <td>27.45028</td>\n",
       "      <td>61.46909</td>\n",
       "      <td>Cross-shore</td>\n",
       "      <td>29.53946</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-02-13 13:00:00</th>\n",
       "      <td>-10</td>\n",
       "      <td>26.33655</td>\n",
       "      <td>58.48280</td>\n",
       "      <td>Cross-shore</td>\n",
       "      <td>28.50559</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-02-13 16:00:00</th>\n",
       "      <td>-10</td>\n",
       "      <td>26.38725</td>\n",
       "      <td>63.18200</td>\n",
       "      <td>Cross-shore</td>\n",
       "      <td>28.08024</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-02-13 19:00:00</th>\n",
       "      <td>-10</td>\n",
       "      <td>26.22154</td>\n",
       "      <td>57.65973</td>\n",
       "      <td>Cross-shore</td>\n",
       "      <td>26.22154</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-02-13 22:00:00</th>\n",
       "      <td>-10</td>\n",
       "      <td>21.87551</td>\n",
       "      <td>51.86909</td>\n",
       "      <td>Cross-shore</td>\n",
       "      <td>21.87551</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                     utcOffset     speed  direction directionType      gust  \\\n",
       "timestamp                                                                     \n",
       "2022-02-13 10:00:00        -10  27.45028   61.46909   Cross-shore  29.53946   \n",
       "2022-02-13 13:00:00        -10  26.33655   58.48280   Cross-shore  28.50559   \n",
       "2022-02-13 16:00:00        -10  26.38725   63.18200   Cross-shore  28.08024   \n",
       "2022-02-13 19:00:00        -10  26.22154   57.65973   Cross-shore  26.22154   \n",
       "2022-02-13 22:00:00        -10  21.87551   51.86909   Cross-shore  21.87551   \n",
       "\n",
       "                     optimalScore  \n",
       "timestamp                          \n",
       "2022-02-13 10:00:00             0  \n",
       "2022-02-13 13:00:00             0  \n",
       "2022-02-13 16:00:00             0  \n",
       "2022-02-13 19:00:00             0  \n",
       "2022-02-13 22:00:00             0  "
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "wind=spot.get_dataframe(\"wind\")\n",
    "wind.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>utcOffset</th>\n",
       "      <th>type</th>\n",
       "      <th>height</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>timestamp</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2022-02-13 10:00:00</th>\n",
       "      <td>-10</td>\n",
       "      <td>NORMAL</td>\n",
       "      <td>0.46</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-02-13 11:00:00</th>\n",
       "      <td>-10</td>\n",
       "      <td>NORMAL</td>\n",
       "      <td>0.50</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-02-13 11:42:27</th>\n",
       "      <td>-10</td>\n",
       "      <td>HIGH</td>\n",
       "      <td>0.51</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-02-13 12:00:00</th>\n",
       "      <td>-10</td>\n",
       "      <td>NORMAL</td>\n",
       "      <td>0.50</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-02-13 13:00:00</th>\n",
       "      <td>-10</td>\n",
       "      <td>NORMAL</td>\n",
       "      <td>0.46</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                     utcOffset    type  height\n",
       "timestamp                                     \n",
       "2022-02-13 10:00:00        -10  NORMAL    0.46\n",
       "2022-02-13 11:00:00        -10  NORMAL    0.50\n",
       "2022-02-13 11:42:27        -10    HIGH    0.51\n",
       "2022-02-13 12:00:00        -10  NORMAL    0.50\n",
       "2022-02-13 13:00:00        -10  NORMAL    0.46"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tides=spot.get_dataframe(\"tides\")\n",
    "tides.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>utcOffset</th>\n",
       "      <th>temperature</th>\n",
       "      <th>condition</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>timestamp</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2022-02-13 10:00:00</th>\n",
       "      <td>-10</td>\n",
       "      <td>22.55325</td>\n",
       "      <td>NIGHT_CLEAR</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-02-13 13:00:00</th>\n",
       "      <td>-10</td>\n",
       "      <td>22.36676</td>\n",
       "      <td>NIGHT_CLEAR</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-02-13 16:00:00</th>\n",
       "      <td>-10</td>\n",
       "      <td>22.30981</td>\n",
       "      <td>NIGHT_BRIEF_SHOWERS_POSSIBLE</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-02-13 19:00:00</th>\n",
       "      <td>-10</td>\n",
       "      <td>22.48560</td>\n",
       "      <td>CLEAR</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-02-13 22:00:00</th>\n",
       "      <td>-10</td>\n",
       "      <td>22.62952</td>\n",
       "      <td>CLEAR</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                     utcOffset  temperature                     condition\n",
       "timestamp                                                                \n",
       "2022-02-13 10:00:00        -10     22.55325                   NIGHT_CLEAR\n",
       "2022-02-13 13:00:00        -10     22.36676                   NIGHT_CLEAR\n",
       "2022-02-13 16:00:00        -10     22.30981  NIGHT_BRIEF_SHOWERS_POSSIBLE\n",
       "2022-02-13 19:00:00        -10     22.48560                         CLEAR\n",
       "2022-02-13 22:00:00        -10     22.62952                         CLEAR"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "weather=spot.get_dataframe(\"weather\")\n",
    "weather.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>midnightUTCOffset</th>\n",
       "      <th>dawn</th>\n",
       "      <th>dawnUTCOffset</th>\n",
       "      <th>sunrise</th>\n",
       "      <th>sunriseUTCOffset</th>\n",
       "      <th>sunset</th>\n",
       "      <th>sunsetUTCOffset</th>\n",
       "      <th>dusk</th>\n",
       "      <th>duskUTCOffset</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>midnight</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2022-02-13 10:00:00</th>\n",
       "      <td>-10</td>\n",
       "      <td>2022-02-13 16:42:46</td>\n",
       "      <td>-10</td>\n",
       "      <td>2022-02-13 17:05:35</td>\n",
       "      <td>-10</td>\n",
       "      <td>2022-02-14 04:30:04</td>\n",
       "      <td>-10</td>\n",
       "      <td>2022-02-14 04:52:52</td>\n",
       "      <td>-10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-02-14 10:00:00</th>\n",
       "      <td>-10</td>\n",
       "      <td>2022-02-14 16:42:13</td>\n",
       "      <td>-10</td>\n",
       "      <td>2022-02-14 17:05:00</td>\n",
       "      <td>-10</td>\n",
       "      <td>2022-02-15 04:30:36</td>\n",
       "      <td>-10</td>\n",
       "      <td>2022-02-15 04:53:23</td>\n",
       "      <td>-10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-02-15 10:00:00</th>\n",
       "      <td>-10</td>\n",
       "      <td>2022-02-15 16:41:38</td>\n",
       "      <td>-10</td>\n",
       "      <td>2022-02-15 17:04:23</td>\n",
       "      <td>-10</td>\n",
       "      <td>2022-02-16 04:31:08</td>\n",
       "      <td>-10</td>\n",
       "      <td>2022-02-16 04:53:53</td>\n",
       "      <td>-10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-02-16 10:00:00</th>\n",
       "      <td>-10</td>\n",
       "      <td>2022-02-16 16:41:03</td>\n",
       "      <td>-10</td>\n",
       "      <td>2022-02-16 17:03:46</td>\n",
       "      <td>-10</td>\n",
       "      <td>2022-02-17 04:31:39</td>\n",
       "      <td>-10</td>\n",
       "      <td>2022-02-17 04:54:22</td>\n",
       "      <td>-10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-02-17 10:00:00</th>\n",
       "      <td>-10</td>\n",
       "      <td>2022-02-17 16:40:26</td>\n",
       "      <td>-10</td>\n",
       "      <td>2022-02-17 17:03:07</td>\n",
       "      <td>-10</td>\n",
       "      <td>2022-02-18 04:32:10</td>\n",
       "      <td>-10</td>\n",
       "      <td>2022-02-18 04:54:51</td>\n",
       "      <td>-10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-02-18 10:00:00</th>\n",
       "      <td>-10</td>\n",
       "      <td>2022-02-18 16:39:48</td>\n",
       "      <td>-10</td>\n",
       "      <td>2022-02-18 17:02:28</td>\n",
       "      <td>-10</td>\n",
       "      <td>2022-02-19 04:32:40</td>\n",
       "      <td>-10</td>\n",
       "      <td>2022-02-19 04:55:20</td>\n",
       "      <td>-10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-02-19 10:00:00</th>\n",
       "      <td>-10</td>\n",
       "      <td>2022-02-19 16:39:10</td>\n",
       "      <td>-10</td>\n",
       "      <td>2022-02-19 17:01:48</td>\n",
       "      <td>-10</td>\n",
       "      <td>2022-02-20 04:33:10</td>\n",
       "      <td>-10</td>\n",
       "      <td>2022-02-20 04:55:48</td>\n",
       "      <td>-10</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                     midnightUTCOffset                dawn  dawnUTCOffset  \\\n",
       "midnight                                                                    \n",
       "2022-02-13 10:00:00                -10 2022-02-13 16:42:46            -10   \n",
       "2022-02-14 10:00:00                -10 2022-02-14 16:42:13            -10   \n",
       "2022-02-15 10:00:00                -10 2022-02-15 16:41:38            -10   \n",
       "2022-02-16 10:00:00                -10 2022-02-16 16:41:03            -10   \n",
       "2022-02-17 10:00:00                -10 2022-02-17 16:40:26            -10   \n",
       "2022-02-18 10:00:00                -10 2022-02-18 16:39:48            -10   \n",
       "2022-02-19 10:00:00                -10 2022-02-19 16:39:10            -10   \n",
       "\n",
       "                                sunrise  sunriseUTCOffset              sunset  \\\n",
       "midnight                                                                        \n",
       "2022-02-13 10:00:00 2022-02-13 17:05:35               -10 2022-02-14 04:30:04   \n",
       "2022-02-14 10:00:00 2022-02-14 17:05:00               -10 2022-02-15 04:30:36   \n",
       "2022-02-15 10:00:00 2022-02-15 17:04:23               -10 2022-02-16 04:31:08   \n",
       "2022-02-16 10:00:00 2022-02-16 17:03:46               -10 2022-02-17 04:31:39   \n",
       "2022-02-17 10:00:00 2022-02-17 17:03:07               -10 2022-02-18 04:32:10   \n",
       "2022-02-18 10:00:00 2022-02-18 17:02:28               -10 2022-02-19 04:32:40   \n",
       "2022-02-19 10:00:00 2022-02-19 17:01:48               -10 2022-02-20 04:33:10   \n",
       "\n",
       "                     sunsetUTCOffset                dusk  duskUTCOffset  \n",
       "midnight                                                                 \n",
       "2022-02-13 10:00:00              -10 2022-02-14 04:52:52            -10  \n",
       "2022-02-14 10:00:00              -10 2022-02-15 04:53:23            -10  \n",
       "2022-02-15 10:00:00              -10 2022-02-16 04:53:53            -10  \n",
       "2022-02-16 10:00:00              -10 2022-02-17 04:54:22            -10  \n",
       "2022-02-17 10:00:00              -10 2022-02-18 04:54:51            -10  \n",
       "2022-02-18 10:00:00              -10 2022-02-19 04:55:20            -10  \n",
       "2022-02-19 10:00:00              -10 2022-02-20 04:55:48            -10  "
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "spot.get_dataframe(\"sunlightTimes\")"
   ]
  }
 ],
 "metadata": {
  "interpreter": {
   "hash": "2d92824427b41c6028804632d5278b37df1fc0de77b5e6f8aeb0bbbd2f432773"
  },
  "kernelspec": {
   "display_name": "Python 3.7.12 ('cryptoenv')",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.10"
  },
  "orig_nbformat": 4
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
